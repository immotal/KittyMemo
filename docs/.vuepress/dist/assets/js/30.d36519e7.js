(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{347:function(t,a,s){"use strict";s.r(a);var e=s(25),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"markdown-语法规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markdown-语法规范"}},[t._v("#")]),t._v(" Markdown 语法规范")]),t._v(" "),a("p",[t._v("Markdown 的语法没有唯一的官方标准，毕竟 Aaron Swartz 英年早逝。但是开源界普遍接受 GFM（GitHub Flavored Markdown）作为既定事实标准。所以我们也按照这个标准进行规范，另外对 Markdown 可以多种表达的语法结构做一定约束。")]),t._v(" "),a("h2",{attrs:{id:"大家常见的错误和约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大家常见的错误和约束"}},[t._v("#")]),t._v(" 大家常见的错误和约束")]),t._v(" "),a("h3",{attrs:{id:"_1️⃣多级标题的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1️⃣多级标题的使用"}},[t._v("#")]),t._v(" 1️⃣多级标题的使用")]),t._v(" "),a("blockquote",[a("p",[t._v("多级标题约定使用「"),a("strong",[t._v("单侧 "),a("code",[t._v("#")]),t._v(" 号表示")]),t._v("」也即：")])]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" 一级标题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 二级标题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("###")]),t._v(" 三级标题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("####")]),t._v(" 四级标题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#####")]),t._v(" 五级标题")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("######")]),t._v(" 六级标题")]),t._v("\n")])])]),a("h4",{attrs:{id:"需要注意的地方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要注意的地方"}},[t._v("#")]),t._v(" 需要注意的地方")]),t._v(" "),a("ol",[a("li",[t._v("使用单侧 "),a("code",[t._v("#")]),t._v(" 号，而非双侧形式 "),a("code",[t._v("# 一级标题 #")])]),t._v(" "),a("li",[a("code",[t._v("#")]),t._v(" 号和标题之间必须添加一个"),a("code",[t._v("空格")])]),t._v(" "),a("li",[t._v("标题前后需要添加"),a("code",[t._v("空行")])]),t._v(" "),a("li",[t._v("多级标题需要层级连续使用，不要跳级")]),t._v(" "),a("li",[t._v("一个文档有且仅有一个一级标题")]),t._v(" "),a("li",[t._v("不使用三连字符法创建标题 "),a("code",[t._v("---")]),t._v(" 和 "),a("code",[t._v("===")]),t._v(" （deprecated）")])]),t._v(" "),a("h3",{attrs:{id:"_2️⃣段落间的空行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2️⃣段落间的空行"}},[t._v("#")]),t._v(" 2️⃣段落间的空行")]),t._v(" "),a("blockquote",[a("p",[t._v("Markdown 任意段落之间必须使用一个"),a("code",[t._v("空行")]),t._v("隔开：")])]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[a("span",{pre:!0,attrs:{class:"token title important"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" 标题下面要空行")]),t._v("\n\n段落 1，哪怕很短，下一个段落也要空行。\n\n段落 2，下一个段落是有序列表，也需要空行：\n\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("1.")]),t._v(" 这是有序列表 1，下一个序号不需要空行\n"),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("2.")]),t._v(" 这是有序列表 2，可以通过缩进混合无序列表使用\n    "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" 这是无序列表，下一个表项也不需要空号\n    "),a("span",{pre:!0,attrs:{class:"token list punctuation"}},[t._v("-")]),t._v(" 列表结束之后也需要空行\n\n"),a("span",{pre:!0,attrs:{class:"token blockquote punctuation"}},[t._v(">")]),t._v(" 这是一段引用。\n"),a("span",{pre:!0,attrs:{class:"token blockquote punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token blockquote punctuation"}},[t._v(">")]),t._v(" 引用内部形成段落也需要空行⬆️。\n"),a("span",{pre:!0,attrs:{class:"token blockquote punctuation"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token blockquote punctuation"}},[t._v("> >")]),t._v(" 引用层级可以嵌套\n")])])]),a("p",[t._v("上面正确的语法会被各种编辑器和以及网页正确的 parse 和渲染：")]),t._v(" "),a("p",[t._v("段落 1，哪怕很短，下一个段落也要空行。")]),t._v(" "),a("p",[t._v("段落 2，下一个段落是有序列表，也需要空行：")]),t._v(" "),a("ol",[a("li",[t._v("这是有序列表 1，下一个序号不需要空行")]),t._v(" "),a("li",[t._v("这是有序列表 2，可以通过缩进混合无序列表使用")])]),t._v(" "),a("ul",[a("li",[t._v("这是无序列表，下一个表项也不需要空号")]),t._v(" "),a("li",[t._v("列表结束之后也需要空行")])]),t._v(" "),a("blockquote",[a("p",[t._v("这是一段引用。")]),t._v(" "),a("p",[t._v("引用内部形成段落也需要空行⬆️。")]),t._v(" "),a("blockquote",[a("p",[t._v("引用层级可以嵌套")])])]),t._v(" "),a("h4",{attrs:{id:"需要注意的地方-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要注意的地方-2"}},[t._v("#")]),t._v(" 需要注意的地方")]),t._v(" "),a("ol",[a("li",[t._v("Markdown 中所有连续空格以及空行都会被识别成一个，因此"),a("strong",[t._v("不要在 Markdown 中使用连续空格和连续空行来排版")])]),t._v(" "),a("li",[t._v("Markdown 中单个换行符会被识别成 "),a("code",[t._v("</br>")]),t._v(" 自闭合标签，而非段落标签 "),a("code",[t._v("<p></p>")]),t._v("，因此记得"),a("strong",[t._v("段落之间保持的一个单独的空行")])]),t._v(" "),a("li",[a("strong",[t._v("不要在一个段落中使用换行符")]),t._v("来进行硬回车，会被识别成一个空格，一个段落只占一行")]),t._v(" "),a("li",[t._v("所有段落级别的语法都需要写成"),a("strong",[t._v("标记符+空格")]),t._v("：例如 "),a("code",[t._v("1. 有序列表")]),t._v("，"),a("code",[t._v("- 无序列表")]),t._v("，"),a("code",[t._v("> 引用")]),t._v("，"),a("code",[t._v("# 标题")])])]),t._v(" "),a("h3",{attrs:{id:"引入代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引入代码"}},[t._v("#")]),t._v(" 引入代码")]),t._v(" "),a("blockquote",[a("p",[t._v("块级代码统一使用三个反引号 ` 符号，而非使用 8 个空格的缩进方式")])]),t._v(" "),a("p",[t._v("块级代码使用三个反引号的包围结构有以下好处：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("清晰的开始和结束边界")])]),t._v(" "),a("li",[a("p",[t._v("可以指明代码块的语法高亮语言")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" ```python\n code here\n ```\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"需要注意的地方-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要注意的地方-3"}},[t._v("#")]),t._v(" 需要注意的地方")]),t._v(" "),a("ol",[a("li",[t._v("但凡段落中出现"),a("strong",[t._v("类、方法、变量、参数")]),t._v("，需要使用行内代码一个反引号符号 ` 包围")]),t._v(" "),a("li",[t._v("块级代码需要指明使用的语言，确保语法高亮正确解析反引号")]),t._v(" "),a("li",[t._v("再次强调，块级代码前后都需要一个空行")])]),t._v(" "),a("h3",{attrs:{id:"其他的一些约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他的一些约束"}},[t._v("#")]),t._v(" 其他的一些约束")]),t._v(" "),a("ol",[a("li",[t._v("英文单词应该与中文间有一个空格的间隔，标点符号前后都不应该有空格，参见 "),a("a",{attrs:{href:"https://sspai.com/post/33549",target:"_blank",rel:"noopener noreferrer"}},[t._v("盘古之白"),a("OutboundLink")],1),t._v("，点名表扬 @panpan.wu 规范的空格书写格式")]),t._v(" "),a("li",[t._v("插入图片和链接优先使用行内引用表达式，而非参考引用表达式")]),t._v(" "),a("li",[t._v("文档第一行必须以一级标题 "),a("code",[t._v("# 文档标题")]),t._v(" 开始，或二级标题 "),a("code",[t._v("## 文档章节")]),t._v(" 开始，不能没有标题没有层级，或则随意从三级、四级标题开始")]),t._v(" "),a("li",[t._v("Markdown 中的语法符号都是英文半角符号，切勿使用中文全角符号")])]),t._v(" "),a("h2",{attrs:{id:"markdown-风格检查工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markdown-风格检查工具"}},[t._v("#")]),t._v(" Markdown 风格检查工具")]),t._v(" "),a("p",[t._v("为了方便大家按照上述要求检查自己的 Markdown 风格，我给大家提供一个命令行工具，使用之前需要有 "),a("code",[t._v("npm")]),t._v(" 环境，怎么安装环境我就不介绍了，下面安装检查工具：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install -g hs-markdownlint-cli\n")])])]),a("p",[t._v("使用也很简单，同时支持对文件和整个文件夹的风格进行检查：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("markdownlint <file>\nmarkdownlint <dir>\n")])])]),a("p",[t._v("更多命令请通过 "),a("code",[t._v("markdownlint -h")]),t._v(" 查询帮助获得：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ markdownlint -h\n\n  Usage: markdownlint [options] <files|directories|globs>\n\n  HS MarkdownLint Command Line Interface\n\n  Options:\n\n    -h, --help                                  output usage information\n    -V, --version                               output the version number\n    -s, --stdin                                 read from STDIN (no files)\n    -o, --output [outputFile]                   write issues to file (no console)\n    -c, --config [configFile]                   configuration file (JSON or YAML)\n    -i, --ignore [file|directory|glob]          files to ignore/exclude\n    -r, --rules  [file|directory|glob|package]  custom rule files\n")])])]),a("h3",{attrs:{id:"版本更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本更新"}},[t._v("#")]),t._v(" 版本更新")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("0.1.2")]),t._v("：根据上述约束条件进行了配置修改")])]),t._v(" "),a("h3",{attrs:{id:"vs-code-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-插件"}},[t._v("#")]),t._v(" VS Code 插件")]),t._v(" "),a("p",[t._v("如果你使用 VS Code 作为你的 Markdown 编辑器，那么可以直接使用插件库中的 "),a("code",[t._v("markdownlint")]),t._v(" 插件，因为我们使用的是同一个语法检查库，所以只需要在 VS Code 的设置中对 User->Extensions->markdownlint 添加如下配置即可：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"markdownlint.config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"line-length"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fenced-code-language"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"no-duplicate-heading"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"no-bare-urls"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"MD007"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"indent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("不符合语法风格的部分会在 VS Code 中使用绿色波浪线标记出来，右侧 minimap 也会高亮显示，方便大家定位修改。更多的使用方法，参照插件的使用说明即可。")]),t._v(" "),a("h3",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("有些问题也是风格检查器检查不出来，例如：")]),t._v(" "),a("ul",[a("li",[t._v("由于中文原因，中文与英文、中文与数字、中文与代码之间的空格检查不出来，因为在英文环境下不存在这个问题")]),t._v(" "),a("li",[t._v("标题过长无法检查出来，只能对整篇文档的 line length 做限制，但是这种做法只在英文文档中是合理的，在中文文档中不合理（空格区分词汇的语言习惯可以用硬回车代替空格）")]),t._v(" "),a("li",[t._v("在段落中引用代码的时候没有加反引号，这个只能靠自己去判断该不该加")])]),t._v(" "),a("h2",{attrs:{id:"gfm-参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gfm-参考"}},[t._v("#")]),t._v(" GFM 参考")]),t._v(" "),a("p",[t._v("下面给大家附上 GitHub Flavored Markdown 语法手册，其中具有多种写法的语法点，我都在上面做了约束，下面的参考手册方便不熟悉语法的同学速查。大家也可以在 GitHub 官方网站中查看到更为详细的信息："),a("a",{attrs:{href:"https://github.github.com/gfm/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GFM 文档"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"标题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标题"}},[t._v("#")]),t._v(" 标题")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 第一级标题 `<h1>`\n## 第二级标题 `<h2>`\n###### 第六级标题 `<h6>`\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("h1",{attrs:{id:"第一级标题-h1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一级标题-h1"}},[t._v("#")]),t._v(" 第一级标题 "),a("code",[t._v("<h1>")])]),t._v(" "),a("h2",{attrs:{id:"第二级标题-h2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二级标题-h2"}},[t._v("#")]),t._v(" 第二级标题 "),a("code",[t._v("<h2>")])]),t._v(" "),a("h6",{attrs:{id:"第六级标题-h6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六级标题-h6"}},[t._v("#")]),t._v(" 第六级标题 "),a("code",[t._v("<h6>")])]),t._v(" "),a("h3",{attrs:{id:"强调"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强调"}},[t._v("#")]),t._v(" 强调")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("*这些文字会生成`<em>`*\n_这些文字会生成`<u>`_\n\n**这些文字会生成`<strong>`**\n__这些文字会生成`<strong>`__\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("p",[a("em",[t._v("这些文字会生成"),a("code",[t._v("<em>")])]),t._v(" "),a("em",[t._v("这些文字会生成"),a("code",[t._v("<u>")])])]),t._v(" "),a("p",[a("strong",[t._v("这些文字会生成"),a("code",[t._v("<strong>")])]),t._v(" "),a("strong",[t._v("这些文字会生成"),a("code",[t._v("<strong>")])])]),t._v(" "),a("h3",{attrs:{id:"列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[t._v("#")]),t._v(" 列表")]),t._v(" "),a("h4",{attrs:{id:"无序列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无序列表"}},[t._v("#")]),t._v(" 无序列表")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("- 项目一 无序列表 `- + 空格键`\n- 项目二\n    - 项目二的子项目一 无序列表 `TAB + - + 空格键`\n    - 项目二的子项目二\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("ul",[a("li",[t._v("项目一 无序列表 "),a("code",[t._v("- + 空格键")])]),t._v(" "),a("li",[t._v("项目二\n"),a("ul",[a("li",[t._v("项目二的子项目一 无序列表 "),a("code",[t._v("TAB + - + 空格键")])]),t._v(" "),a("li",[t._v("项目二的子项目二")])])])]),t._v(" "),a("h4",{attrs:{id:"有序列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有序列表"}},[t._v("#")]),t._v(" 有序列表")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 项目一 有序列表 `数字 + . + 空格键`\n2. 项目二\n3. 项目三\n    1. 项目三的子项目一 有序列表 `TAB + 数字 + . + 空格键`\n    2. 项目三的子项目二\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("ol",[a("li",[t._v("项目一 有序列表 "),a("code",[t._v("数字 + . + 空格键")])]),t._v(" "),a("li",[t._v("项目二")]),t._v(" "),a("li",[t._v("项目三\n"),a("ol",[a("li",[t._v("项目三的子项目一 有序列表 "),a("code",[t._v("TAB + 数字 + . + 空格键")])]),t._v(" "),a("li",[t._v("项目三的子项目二")])])])]),t._v(" "),a("h4",{attrs:{id:"任务列表-task-lists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任务列表-task-lists"}},[t._v("#")]),t._v(" 任务列表（Task lists）")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("- [ ] 任务一 未做任务 `- + 空格 + [ ]`\n- [x] 任务二 已做任务 `- + 空格 + [x]`\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("ul",[a("li",[t._v("[ ] 任务一 未做任务 "),a("code",[t._v("- + 空格 + [ ]")])]),t._v(" "),a("li",[t._v("[x] 任务二 已做任务 "),a("code",[t._v("- + 空格 + [x]")])])]),t._v(" "),a("h3",{attrs:{id:"图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片"}},[t._v("#")]),t._v(" 图片")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)\n格式：![Alt Text](url)\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://zh.mweb.im/asset/img/set-up-git.gif",alt:"GitHub set up"}})]),t._v(" "),a("h3",{attrs:{id:"链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("email <example@example.com>\n[GitHub](http://github.com)\n自动生成连接  <http://www.github.com/>\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("p",[t._v("Email 连接： "),a("a",{attrs:{href:"mailto:example@example.com"}},[t._v("example@example.com")]),t._v(" "),a("a",{attrs:{href:"http://github.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("连接标题 Github 网站"),a("OutboundLink")],1),t._v("\n自动生成连接像： "),a("a",{attrs:{href:"http://www.github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.github.com/"),a("OutboundLink")],1),t._v(" 这样")]),t._v(" "),a("h3",{attrs:{id:"区块引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区块引用"}},[t._v("#")]),t._v(" 区块引用")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("某某说：\n\n> 第一行引用\n> 第二行费用文字\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("p",[t._v("某某说：")]),t._v(" "),a("blockquote",[a("p",[t._v("第一行引用\n第二行费用文字")])]),t._v(" "),a("h3",{attrs:{id:"行内代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行内代码"}},[t._v("#")]),t._v(" 行内代码")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("像这样即可：`<addr>` `code`\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("p",[t._v("像这样即可："),a("code",[t._v("<addr>")]),t._v(" "),a("code",[t._v("code")])]),t._v(" "),a("h3",{attrs:{id:"多行或者一段代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多行或者一段代码"}},[t._v("#")]),t._v(" 多行或者一段代码")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```js\nfunction fancyAlert(arg) {\n    if(arg) {\n    $.facebox({div:'#foo'})\n    }\n}\n```\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fancyAlert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("facebox")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("div")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"表格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表格"}},[t._v("#")]),t._v(" 表格")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("第一格表头 | 第二格表头\n--------- | -------------\n内容单元格 第一列第一格 | 内容单元格第二列第一格\n内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("第一格表头")]),t._v(" "),a("th",[t._v("第二格表头")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("内容单元格 第一列第一格")]),t._v(" "),a("td",[t._v("内容单元格第二列第一格")])]),t._v(" "),a("tr",[a("td",[t._v("内容单元格 第一列第二格 多加文字")]),t._v(" "),a("td",[t._v("内容单元格第二列第二格")])])])]),t._v(" "),a("h3",{attrs:{id:"删除线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除线"}},[t._v("#")]),t._v(" 删除线")]),t._v(" "),a("p",[t._v("Markdown 语法：")]),t._v(" "),a("p",[t._v("加删除线像这样用： "),a("s",[t._v("删除这些")])]),t._v(" "),a("p",[t._v("效果如下：")]),t._v(" "),a("p",[t._v("加删除线像这样用： "),a("s",[t._v("删除这些")])]),t._v(" "),a("h3",{attrs:{id:"分隔线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分隔线"}},[t._v("#")]),t._v(" 分隔线")]),t._v(" "),a("p",[t._v("以下三种方式都可以生成分隔线：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("***\n\n*****\n\n- - -\n")])])]),a("p",[t._v("效果如下：")]),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("hr")])}),[],!1,null,null,null);a.default=r.exports}}]);